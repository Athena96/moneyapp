
enum CategoryTypes {
  Expense
  Income
}

type Account @model {
  id: ID!
  name: String
  simulation: String
}

# no @model directive because we do not want a Category table, i.e. Categories
# are not singletons to be consistent between types. Like emplies on teams.
type Category {
  id: ID
  name: String
  value: Float
  type: CategoryTypes
}


type Budget @model 
@key(name: "budgetsBySimulationId", fields: ["simulation"], queryField: "budgetsBySimulationId") {
  id: ID!
  name: String
  startDate: AWSDateTime
  endDate: AWSDateTime
  categories: [Category]
  simulation: String
}

type Event @model {
  id: ID!
  name: String
  date: AWSDateTime
  account: String
  category: Category
  simulation: String
}

type Inputs @model {
  id: ID!
  key: String
  value: String
  type: String
  simulation: String
}

type Assets @model {
  id: ID!
  ticker: String
  quantity: Float
  hasIndexData: Int
  account: String
  isCurrency: Int
  simulation: String
}

type Simulation @model 
@key(name: "simulationsByUser", fields: ["user"], queryField: "simulationsByUser") {
  id: ID!
  name: String
  selected: Int
  simulationData: String
  successPercent: String
  lastComputed: AWSDateTime
  user: String
}